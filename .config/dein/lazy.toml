[[plugins]] # 補完
repo = 'Shougo/deoplete.nvim'
if = 'has("python3")'
depends = 'context_filetype.vim'
on_event = 'InsertEnter'
hook_source = '''
let g:deoplete#enable_at_startup = 1
let g:deoplete#custom#option({
    \ 'smart_case': v:true,
    \ 'auto_complete_delay': 200,
    \ 'smart_casel': v:true,
    \ 'max_list': 1000
\ })

inoremap <expr><C-h> deoplete#smart_close_popup()."\<C-h>"
inoremap <expr><BS>  deoplete#smart_close_popup()."\<C-h>"

" <CR>: close popup and save indent.
inoremap <silent> <CR> <C-r>=<SID>my_cr_function()<CR>
function! s:my_cr_function() abort
  return deoplete#close_popup() . "\<CR>"
endfunction
'''

[[plugins]]
repo = 'Shougo/neosnippet.vim'
on_event = 'InsertEnter'
on_ft = ['snippet']
depends = ['neosnippet-snippets']
hook_source = '''
imap <C-k> <Plug>(neosnippet_expand_or_jump)
smap <C-k> <Plug>(neosnippet_expand_or_jump)
xmap <C-k> <Plug>(neosnippet_expand_target)
'''

[[plugins]]
repo = 'Vimjas/vim-python-pep8-indent'
on_ft = ['py', 'python']

[[plugins]]
repo = 'nvie/vim-flake8'
on_ft = ['py', 'python']
hock_add = '''
autocmd BufWritePost *.py call Flake8()
'''

[[plugins]]
repo = 'tell-k/vim-autopep8'
on_ft = ['py', 'python']
hock_add = '''
autocmd FileType python noremap <buffer> <S-f> :call Autopep8()<CR>
'''

[[plugins]]
repo = 'zchee/deoplete-go'
on_ft = 'go'
build = 'make'
depends = ['deoplete.nvim']
hook_source = '''
let g:deoplete#sources#go#gocode_binary = $GOPATH . '/bin/gocode'
set rtp+=$GOPATH/src/github.com/golang/lint/misc/vim
'''

[[plugins]]
repo = 'fatih/vim-go'
on_ft = 'go'
hook_add = '''
let g:go_highlight_functions = 1
let g:go_highlight_methods = 1
let g:go_highlight_fields = 1
let g:go_highlight_types = 1
let g:go_highlight_operators = 1
let g:go_highlight_build_constraints = 1

let g:go_fmt_command = 'goimports'
let g:neomake_go_errcheck_maker = {
    \ 'args': ['-abspath'],
    \ 'append_file': 0,
    \ 'errorformat': '%f:%l:%c:\ %m, %f:%l:%c\ %#%m',
    \ }
    let g:neomake_go_enabled_makers = ['golint', 'govet']
    let g:go_gocode_unimported_packages = 1
    set noexpandtab
    set tabstop=4
    set shiftwidth=4
'''

[[plugins]]
repo = 'autozimu/LanguageClient-neovim'
rev = 'next'
build = 'bash install.sh'
hook_add = '''
let g:LanguageClient_serverCommands = {
    \ 'ruby': ['solargraph','stdio']
    \ }
'''


# ruby local variable highlight
[[plugins]]
repo = 'todesking/ruby_hl_lvar.vim'
on_ft = 'ruby'

# deoplete ruby
[[plugins]]
repo = 'fishbullet/deoplete-ruby'
on_ft = 'ruby'
depends = 'deoplete.nvim'

# rdoc
[[plugins]]
repo = 'hallison/vim-rdoc'
on_ft = 'ruby'

# Ruby on Rails
[[plugins]]
repo = 'tpope/vim-rails'
on_ft = ['rails', 'ruby', 'eruby']
hook_add = '''
nnoremap [rails] <Nop>
nmap     <Leader>r [rails]
nnoremap [rails]r :Denite<Space>rails:
nnoremap <silent> [rails]d :<C-u>Denite<Space>rails:dwim<Return>
nnoremap <silent> [rails]m :<C-u>Denite<Space>rails:model<Return>
nnoremap <silent> [rails]c :<C-u>Denite<Space>rails:controller<Return>
nnoremap <silent> [rails]v :<C-u>Denite<Space>rails:view<Return>
nnoremap <silent> [rails]h :<C-u>Denite<Space>rails:helper<Return>
nnoremap <silent> [rails]t :<C-u>Denite<Space>rails:test<Return>
nnoremap <silent> [rails]s :<C-u>Denite<Space>rails:spec<Return>
au BufNewFile,BufRead *.json.jbuilder set ft=ruby
'''

[[plugins]]
repo = '5t111111/denite-rails'
on_ft = ['rails', 'ruby', 'eruby']
depends = 'deoplete.nvim'

[[plugins]]
repo = 'tpope/vim-pathogen'
on_ft = ['rails', 'ruby', 'eruby']
hook_source = '''
execute pathogen#infect()
'''

[[plugins]]
repo = 'tpope/vim-rake'
depends = 'vim-pathogen'

[[plugins]]
repo = 'tpope/vim-projectionist'
depends = 'vim-pathogen'

[[plugins]]
repo = 'tpope/vim-bundler'
depends = 'vim-pathogen'


[[plugins]]
repo = 'robbles/logstash.vim'
on_ft = ['yaml','yml']

# JavaScript
[[plugins]]
repo = 'othree/yajs.vim'
on_ft = ['javascript']

[[plugins]]
repo = 'pangloss/vim-javascript'
on_ft = ['javascript']

[[plugins]]
repo = 'othree/es.next.syntax.vim'
on_ft = ['javascript']

[[plugins]]
repo = 'othree/javascript-libraries-syntax.vim'
on_ft = ['javascript']
hook_add = '''
let g:used_javascript_libs = 'jquery,underscore,react,flux,jasmine,d3'
let b:javascript_lib_use_jquery = 1
let b:javascript_lib_use_underscore = 1
let b:javascript_lib_use_react = 1
let b:javascript_lib_use_flux = 1
let b:javascript_lib_use_jasmine = 1
let b:javascript_lib_use_d3 = 1
'''

# html tag close
[[plugins]]
repo = 'alvan/vim-closetag'
on_ft = ['xml', 'html', 'eruby', 'xhtml', 'phtml','vue']
hook_add = '''
let g:closetag_filetypes = 'html,xhtml,phtml,eruby,vue'
'''

# rainbown end
[[plugins]]
repo = 'vim-scripts/rainbow-end'
on_ft = ['rails', 'ruby', 'eruby']


# haml
[[plugins]]
repo = 'tpope/vim-haml'
on_ft = ['haml']

[[plugins]]
repo = 'posva/vim-vue'
on_ft = 'vue'

# markdown
[[plugins]]
repo = 'godlygeek/tabular'
on_ft = ['markdown', 'md']

[[plugins]]
repo = 'plasticboy/vim-markdown'
on_ft = ['markdown', 'md']
depends = ['tabular']
hook_add = '''
let g:vim_markdown_folding_disabled = 1
'''

[[plugins]]
repo = 'dhruvasagar/vim-table-mode'
on_ft = ['markdown', 'md']

[[plugins]]
repo = 'iamcco/markdown-preview.vim'
on_ft = ['markdown', 'md']

[[plugins]]
repo = 'tbodt/deoplete-tabnine'

