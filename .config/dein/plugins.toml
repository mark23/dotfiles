[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]] # status line
repo = 'itchyny/lightline.vim'
hook_add = '''
let g:lightline = {
    \ 'colorscheme': 'tender',
    \ 'component': {
    \   'readonly': '%{&readonly?"":""}',
    \ },
    \ 'separator': { 'left': '', 'right': '' },
    \ 'subseparator': { 'left': '', 'right': '' }
    \ }
'''

[[plugins]]
repo = 'Shougo/vimproc.vim'
hook_post_update = '''
  if dein#util#_is_windows()
    let cmd = 'tools\\update-dll-mingw'
  elseif dein#util#_is_cygwin()
    let cmd = 'make -f make_cygwin.mak'
  elseif executable('gmake')
    let cmd = 'gmake'
  else
    let cmd = 'make'
  endif
  let g:dein#plugin.build = cmd
'''

[[plugins]]
repo = 'thinca/vim-quickrun'
hook_post_update = '''
let g:quickrun_config = {'*': {'hook/time/enable': '1'},}
nnoremap <expr><silent> <C-c> quickrun#is_running() ? quickrun#sweep_sessions() : "\<C-c>"
'''

[[plugins]]
repo = 'neomake/neomake'
hook_add = '''
let g:neomake_python_enabled_makers = ['flake8', 'pycodestyle']
let g:neomake_ruby_enabled_makers = ['rubocop']
autocmd! BufWritePost * Neomake
'''

[[plugins]] # Toml
repo  = 'cespare/vim-toml'
on_ft = 'toml'

[[plugins]] # Json
repo = 'elzr/vim-json'
on_ft = 'json'

#[[plugins]] # ansible
#repo = 'chase/vim-ansible-yaml'
#on_ft =  ['ansible', 'yaml', 'yml']

[[plugins]] # ansible
repo = 'pearofducks/ansible-vim'
on_ft =  ['ansible', 'yaml', 'yml']

[[plugins]] # jinaj2
repo = 'Glench/Vim-Jinja2-Syntax'
on_ft = 'j2'

[[plugins]] # mustache
repo = 'juvenn/mustache.vim'
on_ft = 'mustache'

[[plugins]] # Japanese doc
repo = 'vim-jp/vimdoc-ja'
on_ft = 'help'
hook_add = '''
    set helplang=ja,en
'''

# Colors
#[[plugins]]
#repo = 'dracula/vim'
#hook_add = '''
#    if (has("termguicolors"))
#     set termguicolors
#    endif
#    let $NVIM_TUI_ENABLE_TRUE_COLOR=1
#    au MyAutoCmd VimEnter * nested colorscheme dracula
#'''

[[plugins]]
repo = 'jacoborus/tender.vim'
hook_add = '''
    if (has("termguicolors"))
     set termguicolors
    endif
    let $NVIM_TUI_ENABLE_TRUE_COLOR=1
    au MyAutoCmd VimEnter * nested colorscheme tender
'''

#[[plugins]]
#repo = 'rakr/vim-one'
#hook_add = '''
#    if (has("termguicolors"))
#     set termguicolors
#    endif
#    let $NVIM_TUI_ENABLE_TRUE_COLOR=1
#    set background=dark
#    au MyAutoCmd VimEnter * nested colorscheme one
#'''

#[[plugins]]
#repo = 'ayu-theme/ayu-vim'
#hook_add = '''
#    set termguicolors
#    let ayucolor="mirage"
#    au MyAutoCmd VimEnter * nested colorscheme ayu
#'''

[[plugins]]
repo = 'ntpeters/vim-better-whitespace'
hook_add = '''
highlight ExtraWhitespace ctermbg=red
autocmd BufEnter * EnableStripWhitespaceOnSave
'''
[[plugins]]
repo = 'nathanaelkane/vim-indent-guides'
hook_add = '''
let g:indent_guides_enable_on_vim_startup = 1
'''

# markdown
[[plugins]]
repo = 'godlygeek/tabular'

[[plugins]]
repo = 'plasticboy/vim-markdown'
on_ft = ['markdown', 'md']
depends = ['tabular']
hook_add = '''
let g:vim_markdown_folding_disabled = 1
'''

[[plugins]]
repo = 'junegunn/vim-emoji'

[[plugins]]
repo = 'pocari/vim-denite-emoji'

[[plugins]]
repo = 'chr4/nginx.vim'
